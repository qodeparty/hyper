/*/////////////////////////////////////////////////////////////////////////////

  Author  : Avi Damasi

/////////////////////////////////////////////////////////////////////////////*/


  "use strict";

/*/////////////////////////////////////////////////////////////////////////////
// Includes
/////////////////////////////////////////////////////////////////////////////*/

  var EventEmitter = require('events').EventEmitter;


/*/////////////////////////////////////////////////////////////////////////////
// Object Container
/////////////////////////////////////////////////////////////////////////////*/

  var ht = exports = module.exports = {};

/*/////////////////////////////////////////////////////////////////////////////
// Privates
/////////////////////////////////////////////////////////////////////////////*/
  
  var NANO_SECOND = 1e9;
  var _watches = {};

/*/////////////////////////////////////////////////////////////////////////////
// Stopwatch Prototype
/////////////////////////////////////////////////////////////////////////////*/
   
  ht.timedFunction = function timedFunction( fn, out ){

    return function(){

      var start = process.hrtime();
      
      fn.apply( this, arguments );

      var stop  = process.hrtime(start);
      var diff  = stop[0] * NANO_SECOND + stop[1];

      //time in nano seconds
      _watches[ fn.name ] = diff;

      out && out( ( fn.name + ' ' || 'fn ' ) + diff + ' ns' );
    }

  }


  ht.profiledFunction = function timedFunction( fn ){

    return function(){
      console.time(fn.name);
      fn.apply( this, arguments );
      console.timeEnd(fn.name);
    }

  }

  ht.clearWatches = function clearWatches(){
    _watches = {};
  }

/*/////////////////////////////////////////////////////////////////////////////
// Driver / Testing
/////////////////////////////////////////////////////////////////////////////*/
  
  function standalone(b){

    var myFunc = function myFunc( a ){
      console.log( a * a * a || 0 );
    }

    myFunc(b);

    var myFunc = ht.timedFunction( myFunc, console.log );

    myFunc(b+2);

    console.log( _watches );

    var myProfFun = ht.profiledFunction( myFunc );

    myProfFun(b+2);

  }


  if( require.main === module ){

    standalone(9);

  }
